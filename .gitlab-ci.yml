default:
  image: mcr.microsoft.com/dotnet/sdk:6.0
stages:
  - Sonarqube analyze
  - Generate package
  - Push in Nuget
variables:
  PROJECT_CSPROJ: "Telluria.Utils.Crud/Telluria.Utils.Crud.csproj"
  PROJECT_FOLDER: "Telluria.Utils.Crud"

.base-rules:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - $RULES_CHANGES_PATH
    - when: manual
      allow_failure: true

Sonarqube analyze:
  stage: Sonarqube analyze
  extends: .base-rules
  needs: []
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/Backend/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - "Telluria.Utils.Crud/.sonar/cache"
  script:
    - "wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb"
    - "dpkg -i packages-microsoft-prod.deb"
    - "rm packages-microsoft-prod.deb"
    - "apt-get update"
    - "apt-get install -y apt-transport-https && apt-get update && apt-get install -y dotnet-sdk-5.0"
    - "apt-get install --yes openjdk-11-jre"
    - "dotnet tool install --global dotnet-sonarscanner"
    - 'export PATH="$PATH:$HOME/.dotnet/tools"'
    - "cd Telluria.Utils.Crud"
    - 'dotnet sonarscanner begin /k:"Telluria-Utils-.NET" /d:sonar.login="$SONAR_TOKEN" /d:"sonar.host.url=$SONAR_HOST_URL" '
    - "dotnet build"
    - 'dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"'
  allow_failure: true
Generate package:
  stage: Generate package
  extends: .base-rules
  needs: ["Sonarqube analyze"]
  script:
    - "cd Telluria.Utils.Crud"
    - "ls"
    - "rm -R package 2> /dev/null"
    - "dotnet pack Telluria.Utils.Crud.csproj -c Release -o package"
  allow_failure: true
Push in Nuget:
  stage: Push in Nuget
  extends: .base-rules
  needs: ["Generate package"]
  script:
    - "cd Telluria.Utils.Crud/package"
    - "ls"
    - 'echo nuget push *.nupkg --api-key "$NUGET_API_KEY" --source "$NUGET_SERVER" --skip-duplicate'
    - 'nuget push *.nupkg --api-key "$NUGET_API_KEY" --source "$NUGET_SERVER" --skip-duplicate'
  allow_failure: true
