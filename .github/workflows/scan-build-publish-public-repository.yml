name: topconsuite/scan-build-publish-public-repository
on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
  NUGET_SERVER: ${{ secrets.NUGET_SERVER }}
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0
    timeout-minutes: 60
    continue-on-error: true
    env:
      SONAR_USER_HOME: "${{ github.workspace }}/Telluria.Utils.Crud/.sonar"
    steps:
      - uses: actions/checkout@v3.5.0
        with:
          fetch-depth: '0'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install prerequisites
        run: |
          wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          apt-get update
          apt-get install -y apt-transport-https
          apt-get update
          apt-get install -y dotnet-sdk-5.0
          apt-get install --yes openjdk-11-jre
      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
      - name: Run SonarScanner
        run: |
          cd Telluria.Utils.Crud
          export VERSION=$(cat "Telluria.Utils.Crud/Telluria.Utils.Crud.csproj" | grep '<AssemblyVersion>' | sed 's/<[^>]*>//g')
          dotnet sonarscanner begin /k:"Telluria-Utils-.NET-CRUD-" /v:"$VERSION" /d:sonar.login="$SONAR_TOKEN" /d:"sonar.host.url=$SONAR_HOST_URL"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
  nuget-publish:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0
    timeout-minutes: 60
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Publish NuGet package
        run: |
          cd Telluria.Utils.Crud
          rm -rf package 2> /dev/null
          dotnet pack Telluria.Utils.Crud.csproj -c Release -o package
          cd package
          dotnet nuget push Telluria.Utils.Crud.*.nupkg --api-key "${{ secrets.NUGET_API_KEY }}" --source "${{ secrets.NUGET_SERVER }}" --skip-duplicate
